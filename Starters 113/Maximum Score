import java.util.*;
import java.io.*;

class Codechef {
    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader(File file) throws IOException {
            br = new BufferedReader(new FileReader(file));
        }

        public FastReader() throws IOException {

            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] ria(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = Integer.parseInt(next());
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        long[] rla(int n) {
            long[] a = new long[n];
            for (int i = 0; i < n; i++)
                a[i] = Long.parseLong(next());
            return a;
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(System.out);
        FastReader fr = new FastReader();
        int T = fr.nextInt();
        while(T-- > 0) {
            int n = fr.nextInt();
            ArrayList<Integer> arr = new ArrayList<>();
            
            for(int i =0 ; i < n ; i++){
                arr.add(fr.nextInt());
            }
            
            long score = 0 ;
            int turn = 0 ;
            
            for(int i =0 ; i < arr.size()-1  && turn <= (n/2) ; i++){
                if(i < 0){
                    i = 0 ;
                }
                if(arr.get(i) != arr.get(i+1)){
                    score++;
                    arr.remove(i);
                    arr.remove(i);
                    turn++;
                    i -= 2;
                }
            }
            
            out.println(score);
            
        out.flush();
        }
        out.close();
    }
}
